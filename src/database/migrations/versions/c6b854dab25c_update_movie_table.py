"""Update movie table

Revision ID: c6b854dab25c
Revises: 248314068481
Create Date: 2025-10-16 18:27:40.931120

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c6b854dab25c'
down_revision: Union[str, Sequence[str], None] = '248314068481'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('comments', sa.Column('user_id', sa.Integer(), nullable=False))
    op.add_column('comments', sa.Column('movie_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'comments', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'comments', 'movies', ['movie_id'], ['id'])
    op.drop_constraint(op.f('movies_name_year_time_uuid_key'), 'movies', type_='unique')
    op.create_unique_constraint(None, 'movies', ['name', 'year', 'time'])
    op.create_unique_constraint(None, 'movies', ['uuid'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'movies', type_='unique')
    op.drop_constraint(None, 'movies', type_='unique')
    op.create_unique_constraint(op.f('movies_name_year_time_uuid_key'), 'movies', ['name', 'year', 'time', 'uuid'], postgresql_nulls_not_distinct=False)
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.drop_column('comments', 'movie_id')
    op.drop_column('comments', 'user_id')
    # ### end Alembic commands ###
