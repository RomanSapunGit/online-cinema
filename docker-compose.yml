services:
  backend_cinema:
    restart: always
    build:
      context: .
      dockerfile: ../online_cinema/Dockerfile
    container_name: backend_cinema
    command: [ "/bin/bash", "/commands/initialize_app.sh" ]
    env_file:
      - .env.docker
    environment:
      - LOG_LEVEL=debug
      - PYTHONPATH=/usr/src/fastapi
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./src:/usr/src/fastapi
    networks:
      - cinema_network

  ngrok:
    image: ngrok/ngrok:latest
    command: >
      http backend_cinema:8000
    depends_on:
      - backend_cinema
    env_file:
      - .env
    ports:
      - "4040:4040"
    networks:
      - cinema_network

  redis:
    image: redis:alpine
    container_name: redis_db
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - ./data:/data
    restart: always
    networks:
      - cinema_network

  celery_worker:
    build:
      context: .
      dockerfile: ../online_cinema/Dockerfile
    command: celery -A celery_apps.notification_app worker --loglevel=INFO --pool=solo
    volumes:
      - .:/app
    env_file:
      - .env.docker
    depends_on:
      - redis
      - db
    networks:
      - cinema_network

  db:
    image: 'postgres:latest'
    container_name: db
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./postgresql:/docker-entrypoint-initdb.d
      - ./var/lib/postgresql:/var/lib/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB -h 127.0.0.1 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - cinema_network

networks:
  cinema_network:
    driver: bridge